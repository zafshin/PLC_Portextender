/*
 * eflash.h
 *
 *  Created on: Jun 15, 2023
 *      Author: Afshin
 */
#pragma once
#ifndef INC_EFLASH_H_
#define INC_EFLASH_H_
#define READ_INS 0x03U
#define READID_INS 0x90U
#define WRITEEN_INS 0x06U
#define WRITEDS_INS 0x04U
#define WRITEPAGE_INS 0x02U

#define UPDATE_FLAG_ADDR 0x0U
#define UPDATE_ADDR 0x100000U
#define FLASH_ADDR 0x8003B00U
#include "main.h"
struct EFELASH{
	unsigned long CS_Port =0;
	unsigned long CS_Pin =0;
	SPI_HandleTypeDef *spi = nullptr;
};
void set_cs_flash(EFELASH *flash);
void deset_cs_flash(EFELASH *flash);
void spi_w(EFELASH *flash,uint8_t *b, uint16_t size);
void spi_r(EFELASH *flash,uint8_t *data, uint16_t size);
uint8_t check_eflash_status(EFELASH *flash);
void Erase_eflash_sectors(EFELASH *flash, uint32_t *from_address, uint32_t *to_address);
void waitforeflash(EFELASH *flash);
void read_eflash(EFELASH *flash, uint8_t *data, uint32_t *address, uint8_t ins, uint16_t size);
void writeEnable_eflash(EFELASH *flash);
void Erase_eflash(EFELASH *flash);
void writeDisable_eflash(EFELASH *flash);
void write_eflash(EFELASH *flash, uint8_t *data, uint32_t *address);
uint8_t check_eflash(EFELASH *flash);

#endif /* INC_EFLASH_H_ */
